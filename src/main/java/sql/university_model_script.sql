-- MySQL Script generated by MySQL Workbench
-- Sat Sep 19 18:15:07 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema university
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema university
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `university` DEFAULT CHARACTER SET utf8 ;
USE `university` ;

-- -----------------------------------------------------
-- Table `university`.`subjects`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `university`.`subjects` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` NVARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `university`.`faculties`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `university`.`faculties` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` NVARCHAR(150) NOT NULL,
  `budget_places_qty` INT NOT NULL,
  `total_places_qty` INT NOT NULL,
  `first_subj_id` INT NOT NULL,
  `second_subj_id` INT NOT NULL,
  `third_subj_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  INDEX `fk_faculties_subjects1_idx` (`first_subj_id` ASC) VISIBLE,
  INDEX `fk_faculties_subjects2_idx` (`second_subj_id` ASC) VISIBLE,
  INDEX `fk_faculties_subjects3_idx` (`third_subj_id` ASC) VISIBLE,
  CONSTRAINT `fk_faculties_subjects1`
    FOREIGN KEY (`first_subj_id`)
    REFERENCES `university`.`subjects` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_faculties_subjects2`
    FOREIGN KEY (`second_subj_id`)
    REFERENCES `university`.`subjects` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_faculties_subjects3`
    FOREIGN KEY (`third_subj_id`)
    REFERENCES `university`.`subjects` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `university`.`user_roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `university`.`user_roles` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` NVARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `university`.`user_logins`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `university`.`user_logins` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `email` NVARCHAR(45) NOT NULL,
  `password` NVARCHAR(200) NOT NULL,
  `user_roles_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  INDEX `fk_user_logins_user_roles_idx` (`user_roles_id` ASC) VISIBLE,
  CONSTRAINT `fk_user_logins_user_roles`
    FOREIGN KEY (`user_roles_id`)
    REFERENCES `university`.`user_roles` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `university`.`states`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `university`.`states` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` NVARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `university`.`enrollees`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `university`.`enrollees` (
  `user_logins_id` INT NOT NULL,
  `first_name` NVARCHAR(45) NOT NULL,
  `father_name` NVARCHAR(45) NOT NULL,
  `second_name` NVARCHAR(45) NOT NULL,
  `city` NVARCHAR(45) NOT NULL,
  `states_id` INT NOT NULL,
  `school_name` NVARCHAR(150) NOT NULL,
  `school_certificate` BLOB NOT NULL,
  `is_blocked` INT NOT NULL,
  PRIMARY KEY (`user_logins_id`),
  INDEX `fk_enrollees_states1_idx` (`states_id` ASC) VISIBLE,
  CONSTRAINT `fk_enrollees_user_logins1`
    FOREIGN KEY (`user_logins_id`)
    REFERENCES `university`.`user_logins` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_enrollees_states1`
    FOREIGN KEY (`states_id`)
    REFERENCES `university`.`states` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `university`.`statement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `university`.`statement` (
  `user_logins_id` INT NOT NULL,
  `faculties_id` INT NOT NULL,
  `grade_1` INT NOT NULL,
  `grade_2` INT NOT NULL,
  `grade_3` INT NOT NULL,
  `priority` INT NOT NULL,
  `is_approved` INT NOT NULL,
  PRIMARY KEY (`user_logins_id`, `faculties_id`),
  INDEX `fk_statement_faculties1_idx` (`faculties_id` ASC) VISIBLE,
  INDEX `fk_statement_user_logins1_idx` (`user_logins_id` ASC) VISIBLE,
  CONSTRAINT `fk_statement_faculties1`
    FOREIGN KEY (`faculties_id`)
    REFERENCES `university`.`faculties` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_statement_user_logins1`
    FOREIGN KEY (`user_logins_id`)
    REFERENCES `university`.`user_logins` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

INSERT INTO `university`.`user_roles` (`name`) VALUES ('admin'), ('user');
INSERT INTO `university`.`subjects` (`name`) VALUES
('Maths'), ('English'), ('Ukrainian language'), ('History'), ('Physics');
INSERT INTO `university`.`faculties`
(`name`,
`budget_places_qty`,
`total_places_qty`,
`first_subj_id`,
`second_subj_id`,
`third_subj_id`)
VALUES
('Cybersecurity, Computer and Software Engineering', 5, 10, 1, 2, 3),
('Air Navigation', 3, 6, 1, 4, 5),
('International Relations', 2, 5, 2, 3, 4);
INSERT INTO `university`.`user_logins` (`email`, `password`, `user_roles_id`) VALUES
('admin@gmail.com', '123123', 1),
('petrov@gmail.com', '123456', 2),
('ivanov@gmail.com', '456789', 2);
INSERT INTO `university`.`states`(`name`) VALUES
('Cherkasy'), ('Chernihiv'), ('Chernivtsi'), ('Dnipropetrovsk'), ('Donetsk'), ('Ivano-Frankivsk'), 
('Kharkiv'), ('Kherson'), ('Khmelnytskyi'), ('Kiev'), ('Kirovohrad'), ('Luhansk'), ('Lviv'), ('Mykolaiv'), 
('Odessa'), ('Poltava'), ('Rivne'), ('Sumy'), ('Ternopil'), ('Vinnytsia'), ('Volyn'), 
('Zakarpattia'), ('Zaporizhia'), ('Zhytomyr');
INSERT INTO `university`.`enrollees`
(`user_logins_id`, `first_name`, `father_name`, `second_name`, `city`,
`states_id`, `school_name`, `school_certificate`, `is_blocked`)
VALUES
(2, 'Petr','Petrovich','Petrov','Kyiv', 1,'Gimnazium No34', 0, 1),
(3, 'Ivan','Ivanovich','Ivanov','Dnipro', 2,'Gimnazium No15', 0, 0);
INSERT INTO `university`.`statement`
(`user_logins_id`, `faculties_id`, `grade_1`, `grade_2`, `grade_3`, `priority`, `is_approved`)
VALUES
(2, 1, 190, 180, 185, 1, 0),
(2, 2, 190, 180, 185, 2, 0),
(2, 3, 190, 180, 185, 3, 0),
(3, 2, 195, 188, 184, 1, 0),
(3, 3, 197, 177, 199, 2, 0);

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
